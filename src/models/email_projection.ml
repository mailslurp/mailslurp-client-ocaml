(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Email_projection.t : A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the `getEmail` method with the email projection's ID. See `EmailDto` for documentation on projection properties.
 *)

type t = {
    sender: Sender.t option [@default None];
    recipients: Email_recipients.t option [@default None];
    inbox_id: string;
    attachments: string list;
    created_at: string;
    _to: string list;
    cc: string list;
    bcc: string list;
    message_id: string option [@default None];
    domain_id: string option [@default None];
    favourite: bool option [@default None];
    plus_address: string option [@default None];
    size_bytes: int64 option [@default None];
    in_reply_to: string option [@default None];
    read: bool;
    body_excerpt: string option [@default None];
    text_excerpt: string option [@default None];
    body_part_content_types: string list;
    body_md5_hash: string option [@default None];
    team_access: bool;
    subject: string option [@default None];
    id: string;
    thread_id: string option [@default None];
    from: string option;
} [@@deriving yojson { strict = false }, show ];;

(** A compact representation of a full email. Used in list endpoints to keep response sizes low. Body and attachments are not included. To get all fields of the email use the `getEmail` method with the email projection's ID. See `EmailDto` for documentation on projection properties. *)
let create (inbox_id : string) (created_at : string) (_to : string list) (read : bool) (team_access : bool) (id : string) (from : string option) : t = {
    sender = None;
    recipients = None;
    inbox_id = inbox_id;
    attachments = [];
    created_at = created_at;
    _to = _to;
    cc = [];
    bcc = [];
    message_id = None;
    domain_id = None;
    favourite = None;
    plus_address = None;
    size_bytes = None;
    in_reply_to = None;
    read = read;
    body_excerpt = None;
    text_excerpt = None;
    body_part_content_types = [];
    body_md5_hash = None;
    team_access = team_access;
    subject = None;
    id = id;
    thread_id = None;
    from = from;
}

