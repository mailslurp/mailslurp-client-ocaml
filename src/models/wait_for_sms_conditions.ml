(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Wait_for_sms_conditions.t : Conditions to apply to emails that you are waiting for
 *)

type t = {
    (* ID of phone number to search within and apply conditions to. Essentially filtering the SMS found to give a count. *)
    phone_number_id: string;
    (* Limit results *)
    limit: int32 option [@default None];
    (* Number of results that should match conditions. Either exactly or at least this amount based on the `countType`. If count condition is not met and the timeout has not been reached the `waitFor` method will retry the operation. *)
    count: int64;
    (* Max time in milliseconds to wait between retries if a `timeout` is specified. *)
    delay_timeout: int64 option [@default None];
    (* Max time in milliseconds to retry the `waitFor` operation until conditions are met. *)
    timeout: int64;
    (* Apply conditions only to **unread** SMS. All SMS messages begin with `read=false`. An SMS is marked `read=true` when an `SMS` has been returned to the user at least once. For example you have called `getSms`, or you have viewed the SMS in the dashboard. *)
    unread_only: bool option [@default None];
    (* How result size should be compared with the expected size. Exactly or at-least matching result? *)
    count_type: Enums.counttype option [@default None];
    (* Conditions that should be matched for an SMS to qualify for results. Each condition will be applied in order to each SMS within a phone number to filter a result list of matching SMSs you are waiting for. *)
    matches: Sms_match_option.t list;
    (* Direction to sort matching SMSs by created time *)
    sort_direction: Enums.sortdirection option [@default None];
    (* ISO Date Time earliest time of SMS to consider. Filter for matching SMSs that were received after this date *)
    since: string option [@default None];
    (* ISO Date Time latest time of SMS to consider. Filter for matching SMSs that were received before this date *)
    before: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Conditions to apply to emails that you are waiting for *)
let create (phone_number_id : string) (count : int64) (timeout : int64) : t = {
    phone_number_id = phone_number_id;
    limit = None;
    count = count;
    delay_timeout = None;
    timeout = timeout;
    unread_only = None;
    count_type = None;
    matches = [];
    sort_direction = None;
    since = None;
    before = None;
}

