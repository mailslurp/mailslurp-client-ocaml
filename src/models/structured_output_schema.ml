(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Structured_output_schema.t : Structured output schema to use for generation
 *)

type t = {
    any_of: Structured_output_schema.t list;
    default: Yojson.Safe.t option [@default None];
    description: string option [@default None];
    enum: string list;
    example: Yojson.Safe.t option [@default None];
    format: string option [@default None];
    items: Structured_output_schema.t option [@default None];
    max_items: int64 option [@default None];
    min_items: int64 option [@default None];
    max_length: int64 option [@default None];
    min_length: int64 option [@default None];
    pattern: string option [@default None];
    properties: (string * Structured_output_schema.t) list;
    property_ordering: string list;
    required: string list;
    max_properties: int64 option [@default None];
    min_properties: int64 option [@default None];
    maximum: float option [@default None];
    minimum: float option [@default None];
    nullable: bool option [@default None];
    title: string option [@default None];
    (* Primitive JSON schema types with a fallback CUSTOM for unknown values. *)
    _type: Enums.structuredoutputschema_type option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Structured output schema to use for generation *)
let create () : t = {
    any_of = [];
    default = None;
    description = None;
    enum = [];
    example = None;
    format = None;
    items = None;
    max_items = None;
    min_items = None;
    max_length = None;
    min_length = None;
    pattern = None;
    properties = [];
    property_ordering = [];
    required = [];
    max_properties = None;
    min_properties = None;
    maximum = None;
    minimum = None;
    nullable = None;
    title = None;
    _type = None;
}

