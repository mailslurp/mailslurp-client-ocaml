(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Webhook_new_email_payload.t : NEW_EMAIL webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to. Use the email ID to fetch the full email body or attachments.
 *)

type t = {
    (* List of attachment meta data objects if attachments present *)
    attachment_meta_datas: Attachment_meta_data.t list;
    (* List of `BCC` recipients email addresses that the email was addressed to. See recipients object for names. *)
    bcc: string list;
    (* List of `CC` recipients email addresses that the email was addressed to. See recipients object for names. *)
    cc: string list;
    (* Date time of event creation *)
    created_at: string option [@default None];
    (* ID of the email that was received. Use this ID for fetching the email with the `EmailController`. *)
    email_id: string option [@default None];
    (* Name of the event type webhook is being triggered for. *)
    event_name: Enums.eventname option [@default None];
    (* Who the email was sent from. An email address - see fromName for the sender name. *)
    from: string option [@default None];
    (* Id of the inbox that received an email *)
    inbox_id: string option [@default None];
    (* Idempotent message ID. Store this ID locally or in a database to prevent message duplication. *)
    message_id: string option [@default None];
    (* The subject line of the email message as specified by SMTP subject header *)
    subject: string option [@default None];
    (* List of `To` recipient email addresses that the email was addressed to. See recipients object for names. *)
    _to: string list;
    (* ID of webhook entity being triggered *)
    webhook_id: string option [@default None];
    (* Name of the webhook being triggered *)
    webhook_name: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** NEW_EMAIL webhook payload. Sent to your webhook url endpoint via HTTP POST when an email is received by the inbox that your webhook is attached to. Use the email ID to fetch the full email body or attachments. *)
let create () : t = {
    attachment_meta_datas = [];
    bcc = [];
    cc = [];
    created_at = None;
    email_id = None;
    event_name = None;
    from = None;
    inbox_id = None;
    message_id = None;
    subject = None;
    _to = [];
    webhook_id = None;
    webhook_name = None;
}

