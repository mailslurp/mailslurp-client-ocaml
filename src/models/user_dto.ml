(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema User_dto.t : Representation a user's account
 *)

type t = {
    id: string;
    api_key: string;
    email_address: string;
    email_address_md5: string;
    created: string option [@default None];
    user_type: Enums.usertype option [@default None];
    (* Does user belong to an organization *)
    organization: string option [@default None];
    (* Has user accepted an organization invite *)
    verified: Enums.verified option [@default None];
    has_password: bool;
    is_frozen: bool;
    add_new_contacts: bool option [@default None];
    sso_provider: string option [@default None];
    customer_id: string option [@default None];
    has_onboarded: bool option [@default None];
    imap_username: string option [@default None];
    imap_password: string option [@default None];
    smtp_username: string option [@default None];
    smtp_password: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Representation a user's account *)
let create (id : string) (api_key : string) (email_address : string) (email_address_md5 : string) (has_password : bool) (is_frozen : bool) : t = {
    id = id;
    api_key = api_key;
    email_address = email_address;
    email_address_md5 = email_address_md5;
    created = None;
    user_type = None;
    organization = None;
    verified = None;
    has_password = has_password;
    is_frozen = is_frozen;
    add_new_contacts = None;
    sso_provider = None;
    customer_id = None;
    has_onboarded = None;
    imap_username = None;
    imap_password = None;
    smtp_username = None;
    smtp_password = None;
}

