(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Email.t : Email model (also referred to as EmailDto). Represents an email that was received by an inbox. If you want the original SMTP message see the `getRawEmail` endpoint.
 *)

type t = {
    analysis: Email_analysis.t option [@default None];
    (* List of IDs of attachments found in the email. Use these IDs with the Inbox and Email Controllers to download attachments and attachment meta data such as filesize, name, extension. *)
    attachments: string list;
    (* List of `BCC` recipients email was addressed to *)
    bcc: string list;
    (* The body of the email message *)
    body: string option [@default None];
    (* A hash signature of the email message *)
    body_md5_hash: string option [@default None];
    (* List of `CC` recipients email was addressed to *)
    cc: string list;
    (* Detected character set of the email body such as UTF-8 *)
    charset: string option [@default None];
    (* When was the email received by MailSlurp *)
    created_at: string option [@default None];
    (* Who the email was sent from *)
    from: string option [@default None];
    headers: (string * string) list;
    (* ID of the email *)
    id: string option [@default None];
    (* ID of the inbox that received the email *)
    inbox_id: string option [@default None];
    (* Was HTML sent in the email body *)
    is_html: bool option [@default None];
    (* Has the email been viewed ever. This means viewed in the dashboard or requested via the full email entity endpoints *)
    read: bool option [@default None];
    (* The replyTo field on the received email *)
    reply_to: string option [@default None];
    (* The subject line of the email message *)
    subject: string option [@default None];
    (* Can the email be accessed by organization team members *)
    team_access: bool option [@default None];
    (* List of `To` recipients email was addressed to *)
    _to: string list;
    (* When was the email last updated *)
    updated_at: string option [@default None];
    (* ID of user that email belongs *)
    user_id: string option [@default None];
} [@@deriving yojson { strict = false }, show ];;

(** Email model (also referred to as EmailDto). Represents an email that was received by an inbox. If you want the original SMTP message see the `getRawEmail` endpoint. *)
let create () : t = {
    analysis = None;
    attachments = [];
    bcc = [];
    body = None;
    body_md5_hash = None;
    cc = [];
    charset = None;
    created_at = None;
    from = None;
    headers = [];
    id = None;
    inbox_id = None;
    is_html = None;
    read = None;
    reply_to = None;
    subject = None;
    team_access = None;
    _to = [];
    updated_at = None;
    user_id = None;
}

