(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Webhook_bounce_payload.t : BOUNCE webhook payload. Sent to your webhook url endpoint via HTTP POST when an email bounced or was rejected by a recipient. Save the recipients to a ban list on your server and avoid emailing them again. It is recommended you also listen to the BOUNCE_RECIPIENT payload.
 *)

type t = {
    (* Idempotent message ID. Store this ID locally or in a database to prevent message duplication. *)
    message_id: string;
    (* ID of webhook entity being triggered *)
    webhook_id: string;
    (* Name of the event type webhook is being triggered for. *)
    event_name: Enums.eventname;
    (* Name of the webhook being triggered *)
    webhook_name: string option [@default None];
    (* ID of the bounce email record. Use the ID with the bounce controller to view more information *)
    bounce_id: string;
    (* Email sent to recipients *)
    sent_to_recipients: string list;
    (* Sender causing bounce *)
    sender: string;
    (* Email addresses that resulted in a bounce or email being rejected. Please save these recipients and avoid emailing them in the future to maintain your reputation. *)
    bounce_recipients: string list;
} [@@deriving yojson { strict = false }, show ];;

(** BOUNCE webhook payload. Sent to your webhook url endpoint via HTTP POST when an email bounced or was rejected by a recipient. Save the recipients to a ban list on your server and avoid emailing them again. It is recommended you also listen to the BOUNCE_RECIPIENT payload. *)
let create (message_id : string) (webhook_id : string) (event_name : Enums.eventname) (bounce_id : string) (sender : string) : t = {
    message_id = message_id;
    webhook_id = webhook_id;
    event_name = event_name;
    webhook_name = None;
    bounce_id = bounce_id;
    sent_to_recipients = [];
    sender = sender;
    bounce_recipients = [];
}

