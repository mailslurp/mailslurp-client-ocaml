(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 * Schema Create_webhook_options.t : Options for creating a webhook. Webhooks can be attached to inboxes and MailSlurp will POST a webhook payload to the URL specified whenever the webhook's event is triggered. Webhooks are great for processing many inbound emails and responding to other events at scale. Customize the payload sent to your endpoint by setting the `requestBodyTemplate` property to a string with moustache style variables. Property names from the standard payload model for the given event are available as variables.
 *)

type t = {
    (* Public URL on your server that MailSlurp can post WebhookNotification payload to when an email is received or an event is trigger. The payload of the submitted JSON is dependent on the webhook event type. See docs.mailslurp.com/webhooks for event payload documentation. *)
    url: string;
    basic_auth: Basic_auth_options.t option [@default None];
    (* Optional name for the webhook *)
    name: string option [@default None];
    (* Optional webhook event name. Default is `EMAIL_RECEIVED` and is triggered when an email is received by the inbox associated with the webhook. Payload differ according to the webhook event name. *)
    event_name: Enums.eventname option [@default None];
    include_headers: Webhook_headers.t option [@default None];
    (* Template for the JSON body of the webhook request that will be sent to your server. Use Moustache style `{{variableName}}` templating to use parts of the standard webhook payload for the given event. *)
    request_body_template: string option [@default None];
    (* Use static IP range when calling webhook endpoint *)
    use_static_ip_range: bool option [@default None];
    (* Ignore insecure SSL certificates when sending request. Useful for self-signed certs. *)
    ignore_insecure_ssl_certificates: bool option [@default None];
    (* Optional list of tags *)
    tags: string list;
} [@@deriving yojson { strict = false }, show ];;

(** Options for creating a webhook. Webhooks can be attached to inboxes and MailSlurp will POST a webhook payload to the URL specified whenever the webhook's event is triggered. Webhooks are great for processing many inbound emails and responding to other events at scale. Customize the payload sent to your endpoint by setting the `requestBodyTemplate` property to a string with moustache style variables. Property names from the standard payload model for the given event are available as variables. *)
let create (url : string) : t = {
    url = url;
    basic_auth = None;
    name = None;
    event_name = None;
    include_headers = None;
    request_body_template = None;
    use_static_ip_range = None;
    ignore_insecure_ssl_certificates = None;
    tags = [];
}

