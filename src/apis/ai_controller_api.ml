(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_transformer ~options ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.add_query_param uri "options" .show options in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_ai_transform_projection.of_yojson) resp body

let create_transformer1 ~ai_tranform_create_options_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Ai_tranform_create_options.to_yojson ai_tranform_create_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ai_transform_dto.of_yojson) resp body

let create_transformer_mappings ~create_ai_transformer_mapping_options_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/mappings" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_ai_transformer_mapping_options.to_yojson create_ai_transformer_mapping_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ai_transform_mapping_dto.of_yojson) resp body

let delete_transformer ~id =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delete_transformer_mapping ~id =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/mappings/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delete_transformers () =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let generate_structured_content_from_attachment ~generate_structured_content_attachment_options_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/structured-content/attachment" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Generate_structured_content_attachment_options.to_yojson generate_structured_content_attachment_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Structured_content_result_dto.of_yojson) resp body

let generate_structured_content_from_email ~generate_structured_content_email_options_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/structured-content/email" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Generate_structured_content_email_options.to_yojson generate_structured_content_email_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Structured_content_result_dto.of_yojson) resp body

let generate_structured_content_from_sms ~generate_structured_content_sms_options_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/structured-content/sms" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Generate_structured_content_sms_options.to_yojson generate_structured_content_sms_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Structured_content_result_dto.of_yojson) resp body

let get_transformer ~id =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ai_transform_dto.of_yojson) resp body

let get_transformer_mapping ~id =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/mappings/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ai_transform_mapping_dto.of_yojson) resp body

let get_transformer_mappings ?ai_transform_id ?entity_id ?entity_type ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/mappings" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "aiTransformId"  ai_transform_id in
    let uri = Request.maybe_add_query_param uri "entityId"  entity_id in
    let uri = Request.maybe_add_query_param uri "entityType" Enums.show_createaitransformermappingoptions_entitytype entity_type in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_ai_transform_mapping_projection.of_yojson) resp body

let get_transformer_result ~id =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/results/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ai_transform_result_dto.of_yojson) resp body

let get_transformer_results ?ai_transform_id ?ai_transform_mapping_id ?entity_id ?entity_type ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/ai/transformer/results" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "aiTransformId"  ai_transform_id in
    let uri = Request.maybe_add_query_param uri "aiTransformMappingId"  ai_transform_mapping_id in
    let uri = Request.maybe_add_query_param uri "entityId"  entity_id in
    let uri = Request.maybe_add_query_param uri "entityType" Enums.show_createaitransformermappingoptions_entitytype entity_type in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_ai_transform_result_projection.of_yojson) resp body

let validate_structured_output_schema ~structured_output_schema_t =
    let open Lwt in
    let uri = Request.build_uri "/ai/structured-content/validate" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Structured_output_schema.to_yojson structured_output_schema_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Structured_output_schema_validation.of_yojson) resp body

