(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_inbox ?allow_team_access ?description ?email_address ?expires_at ?expires_in ?favourite ?inbox_type ?name ?(tags = []) ?use_domain_pool () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "allowTeamAccess" string_of_bool allow_team_access in
    let uri = Request.maybe_add_query_param uri "description" (fun x -> x) description in
    let uri = Request.maybe_add_query_param uri "emailAddress" (fun x -> x) email_address in
    let uri = Request.maybe_add_query_param uri "expiresAt" (fun x -> x) expires_at in
    let uri = Request.maybe_add_query_param uri "expiresIn" Int64.to_string expires_in in
    let uri = Request.maybe_add_query_param uri "favourite" string_of_bool favourite in
    let uri = Request.maybe_add_query_param uri "inboxType" Enums.show_inboxtype inbox_type in
    let uri = Request.maybe_add_query_param uri "name" (fun x -> x) name in
    let uri = Request.add_query_param_list uri "tags" (List.map (fun x -> x)) tags in
    let uri = Request.maybe_add_query_param uri "useDomainPool" string_of_bool use_domain_pool in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

let create_inbox_with_defaults () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/withDefaults" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

let create_inbox_with_options ~create_inbox_dto =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/withOptions" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_inbox_dto.to_yojson create_inbox_dto in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

let delete_all_inboxes () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delete_inbox ~inbox_id =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let get_all_inboxes ?(favourite = false) ?(page = 0l) ?search ?(size = 20l) ?(sort = `ASC) ?tag ?(team_access = false) () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/paginated" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "favourite" string_of_bool favourite in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.maybe_add_query_param uri "search" (fun x -> x) search in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "tag" (fun x -> x) tag in
    let uri = Request.add_query_param uri "teamAccess" string_of_bool team_access in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_inbox_projection.of_yojson) resp body

let get_emails ~inbox_id ?limit ?min_count ?retry_timeout ?since ?size ?sort () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/emails" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "limit" Int32.to_string limit in
    let uri = Request.maybe_add_query_param uri "minCount" Int64.to_string min_count in
    let uri = Request.maybe_add_query_param uri "retryTimeout" Int64.to_string retry_timeout in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "size" Int32.to_string size in
    let uri = Request.maybe_add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Email_preview.of_yojson) resp body

let get_inbox ~inbox_id =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

let get_inbox_emails_paginated ~inbox_id ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/emails/paginated" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_email_preview.of_yojson) resp body

let get_inbox_sent_emails ~inbox_id ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/sent" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_sent_email_projection.of_yojson) resp body

let get_inbox_tags () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/tags" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.to_string) resp body

let get_inboxes ?(size = 100l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Inbox.of_yojson) resp body

let get_organization_inboxes ?(page = 0l) ?(size = 20l) ?(sort = `ASC) () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/organization" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_organization_inbox_projection.of_yojson) resp body

let send_email ~inbox_id ~send_email_options () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let body = Request.write_as_json_body Send_email_options.to_yojson send_email_options in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

let send_email_and_confirm ~inbox_id ~send_email_options () =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/confirm" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let body = Request.write_as_json_body Send_email_options.to_yojson send_email_options in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Sent_email_dto.of_yojson) resp body

let send_test_email ~inbox_id =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/send-test-email" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    Cohttp_lwt_unix.Client.call `POST uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let set_inbox_favourited ~inbox_id ~set_inbox_favourited_options =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}/favourite" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let body = Request.write_as_json_body Set_inbox_favourited_options.to_yojson set_inbox_favourited_options in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

let update_inbox ~inbox_id ~update_inbox_options =
    let open Lwt in
    let uri = Request.build_uri "/inboxes/{inboxId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "inboxId"  inbox_id in
    let body = Request.write_as_json_body Update_inbox_options.to_yojson update_inbox_options in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox.of_yojson) resp body

