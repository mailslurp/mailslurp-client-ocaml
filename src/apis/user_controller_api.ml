(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let get_entity_automations ?(page = 0l) ?(size = 20l) ?(sort = `DESC) ?since ?before ?inbox_id ?phone_id ?filter () =
    let open Lwt in
    let uri = Request.build_uri "/user/automations" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    let uri = Request.maybe_add_query_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "phoneId"  phone_id in
    let uri = Request.maybe_add_query_param uri "filter" Enums.show_automationtype filter in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_entity_automation_items.of_yojson) resp body

let get_entity_events ?(page = 0l) ?(size = 20l) ?(sort = `DESC) ?since ?before ?inbox_id ?email_id ?phone_id ?sms_id ?attachment_id ?filter () =
    let open Lwt in
    let uri = Request.build_uri "/user/events" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    let uri = Request.maybe_add_query_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "emailId"  email_id in
    let uri = Request.maybe_add_query_param uri "phoneId"  phone_id in
    let uri = Request.maybe_add_query_param uri "smsId"  sms_id in
    let uri = Request.maybe_add_query_param uri "attachmentId"  attachment_id in
    let uri = Request.maybe_add_query_param uri "filter" Enums.show_eventtype filter in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_entity_event_items.of_yojson) resp body

let get_entity_favorites ?(page = 0l) ?(size = 20l) ?(sort = `DESC) ?since ?before ?filter () =
    let open Lwt in
    let uri = Request.build_uri "/user/favorites" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    let uri = Request.maybe_add_query_param uri "filter" Enums.show_entityfavouriteitemprojection_entitytype filter in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_entity_favourite_items.of_yojson) resp body

let get_json_property_as_string ~property ~body =
    let open Lwt in
    let uri = Request.build_uri "/user/json/pluck" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "property" (fun x -> x) property in
    let body = Request.write_json_body  body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_user_info () =
    let open Lwt in
    let uri = Request.build_uri "/user/info" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap User_info_dto.of_yojson) resp body

