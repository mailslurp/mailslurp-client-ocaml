(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_guest_portal ~create_portal_options_t =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_portal_options.to_yojson create_portal_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Guest_portal_dto.of_yojson) resp body

let create_guest_portal_user ~portal_id ~create_portal_user_options_t =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/{portalId}/user" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "portalId"  portal_id in
    let body = Request.write_as_json_body Create_portal_user_options.to_yojson create_portal_user_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Guest_portal_user_create_dto.of_yojson) resp body

let get_all_guest_portal_users ?portal_id ?search ?(page = 0l) ?(size = 20l) ?(sort = `ASC) ?since ?before () =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/user" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "portalId"  portal_id in
    let uri = Request.maybe_add_query_param uri "search" (fun x -> x) search in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_guest_portal_users.of_yojson) resp body

let get_guest_portal ~portal_id =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/{portalId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "portalId"  portal_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Guest_portal_dto.of_yojson) resp body

let get_guest_portal_user ~portal_id ~guest_id =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/{portalId}/user/{guestId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "portalId"  portal_id in
    let uri = Request.replace_path_param uri "guestId"  guest_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Guest_portal_user_dto.of_yojson) resp body

let get_guest_portal_user_by_id ~guest_id =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/user/{guestId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "guestId"  guest_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Guest_portal_user_dto.of_yojson) resp body

let get_guest_portal_users ~portal_id ?search ?(page = 0l) ?(size = 20l) ?(sort = `ASC) ?since ?before () =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal/{portalId}/user" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "portalId"  portal_id in
    let uri = Request.maybe_add_query_param uri "search" (fun x -> x) search in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_guest_portal_users.of_yojson) resp body

let get_guest_portals () =
    let open Lwt in
    let uri = Request.build_uri "/guest-portal" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Guest_portal_dto.of_yojson) resp body

