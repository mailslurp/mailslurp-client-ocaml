(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_new_ruleset ~create_ruleset_options_t ?inbox_id ?phone_id () =
    let open Lwt in
    let uri = Request.build_uri "/rulesets" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "phoneId"  phone_id in
    let body = Request.write_as_json_body Create_ruleset_options.to_yojson create_ruleset_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ruleset_dto.of_yojson) resp body

let delete_ruleset ~id =
    let open Lwt in
    let uri = Request.build_uri "/rulesets/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let delete_rulesets ?inbox_id ?phone_id () =
    let open Lwt in
    let uri = Request.build_uri "/rulesets" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "phoneId"  phone_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let get_ruleset ~id =
    let open Lwt in
    let uri = Request.build_uri "/rulesets/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Ruleset_dto.of_yojson) resp body

let get_rulesets ?inbox_id ?phone_id ?(page = 0l) ?(size = 20l) ?(sort = `ASC) ?search_filter ?since ?before () =
    let open Lwt in
    let uri = Request.build_uri "/rulesets" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "inboxId"  inbox_id in
    let uri = Request.maybe_add_query_param uri "phoneId"  phone_id in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "searchFilter" (fun x -> x) search_filter in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_ruleset_dto.of_yojson) resp body

let test_inbox_rulesets_for_inbox ~inbox_id ~ruleset_test_options_t =
    let open Lwt in
    let uri = Request.build_uri "/rulesets" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.add_query_param uri "inboxId"  inbox_id in
    let body = Request.write_as_json_body Ruleset_test_options.to_yojson ruleset_test_options_t in
    Cohttp_lwt_unix.Client.call `PUT uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox_ruleset_test_result.of_yojson) resp body

let test_new_ruleset ~test_new_inbox_ruleset_options_t =
    let open Lwt in
    let uri = Request.build_uri "/rulesets" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Test_new_inbox_ruleset_options.to_yojson test_new_inbox_ruleset_options_t in
    Cohttp_lwt_unix.Client.call `PATCH uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox_ruleset_test_result.of_yojson) resp body

let test_ruleset ~id ~ruleset_test_options_t =
    let open Lwt in
    let uri = Request.build_uri "/rulesets/{id}/test" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    let body = Request.write_as_json_body Ruleset_test_options.to_yojson ruleset_test_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Inbox_ruleset_test_result.of_yojson) resp body

let test_ruleset_receiving ~test_ruleset_receiving_options_t =
    let open Lwt in
    let uri = Request.build_uri "/rulesets/test-receiving" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Test_ruleset_receiving_options.to_yojson test_ruleset_receiving_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Test_ruleset_receiving_result.of_yojson) resp body

let test_ruleset_sending ~test_inbox_ruleset_sending_options_t =
    let open Lwt in
    let uri = Request.build_uri "/rulesets/test-sending" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Test_inbox_ruleset_sending_options.to_yojson test_inbox_ruleset_sending_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Test_ruleset_sending_result.of_yojson) resp body

