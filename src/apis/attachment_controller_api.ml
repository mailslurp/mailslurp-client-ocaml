(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let download_attachment_as_base64_encoded ~attachment_id =
    let open Lwt in
    let uri = Request.build_uri "/attachments/{attachmentId}/base64" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "attachmentId" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Download_attachment_dto.of_yojson) resp body

let download_attachment_as_bytes ~attachment_id =
    let open Lwt in
    let uri = Request.build_uri "/attachments/{attachmentId}/bytes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "attachmentId" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.to_string) resp body

let get_attachment_info ~attachment_id =
    let open Lwt in
    let uri = Request.build_uri "/attachments/{attachmentId}/metadata" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "attachmentId" (fun x -> x) attachment_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Attachment_meta_data.of_yojson) resp body

let upload_attachment ~upload_options =
    let open Lwt in
    let uri = Request.build_uri "/attachments" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Upload_attachment_options.to_yojson upload_options in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.to_string) resp body

let upload_attachment_bytes ?string ?filename ~byte_array () =
    let open Lwt in
    let uri = Request.build_uri "/attachments/bytes" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "String" (fun x -> x) string in
    let uri = Request.maybe_add_query_param uri "filename" (fun x -> x) filename in
    let body = Request.write_string_body  byte_array in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.to_string) resp body

let upload_multipart_form ~file ?content_type ?filename ?x_filename () =
    let open Lwt in
    let uri = Request.build_uri "/attachments/multipart" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "contentType" (fun x -> x) content_type in
    let uri = Request.maybe_add_query_param uri "filename" (fun x -> x) filename in
    let uri = Request.maybe_add_query_param uri "x-filename" (fun x -> x) x_filename in
    let body = Request.init_form_encoded_body () in
    let body = Request.add_form_encoded_body_param body "file" (fun x -> x) file in
    let body = Request.finalize_form_encoded_body body in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.to_string) resp body

