(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_emergency_address ~create_emergency_address_options_t =
    let open Lwt in
    let uri = Request.build_uri "/phone/emergency-addresses" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_emergency_address_options.to_yojson create_emergency_address_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Emergency_address.of_yojson) resp body

let delete_emergency_address ~address_id =
    let open Lwt in
    let uri = Request.build_uri "/phone/emergency-addresses/{addressId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "addressId"  address_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Empty_response_dto.of_yojson) resp body

let delete_phone_number ~phone_number_id =
    let open Lwt in
    let uri = Request.build_uri "/phone/numbers/{phoneNumberId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "phoneNumberId"  phone_number_id in
    Cohttp_lwt_unix.Client.call `DELETE uri ~headers >>= fun (resp, body) ->
    Request.handle_unit_response resp

let get_emergency_address ~address_id =
    let open Lwt in
    let uri = Request.build_uri "/phone/emergency-addresses/{addressId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "addressId"  address_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Emergency_address.of_yojson) resp body

let get_emergency_addresses () =
    let open Lwt in
    let uri = Request.build_uri "/phone/emergency-addresses" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Emergency_address_dto.of_yojson) resp body

let get_phone_number ~phone_number_id =
    let open Lwt in
    let uri = Request.build_uri "/phone/numbers/{phoneNumberId}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "phoneNumberId"  phone_number_id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Phone_number_dto.of_yojson) resp body

let get_phone_numbers ?phone_country ?(page = 0l) ?(size = 20l) ?(sort = `ASC) ?since ?before () =
    let open Lwt in
    let uri = Request.build_uri "/phone/numbers" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "phoneCountry" Enums.show_isocountrycode phone_country in
    let uri = Request.add_query_param uri "page" Int32.to_string page in
    let uri = Request.add_query_param uri "size" Int32.to_string size in
    let uri = Request.add_query_param uri "sort" Enums.show_sortdirection sort in
    let uri = Request.maybe_add_query_param uri "since" (fun x -> x) since in
    let uri = Request.maybe_add_query_param uri "before" (fun x -> x) before in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Page_phone_number_projection.of_yojson) resp body

let get_phone_plans () =
    let open Lwt in
    let uri = Request.build_uri "/phone/plans" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as_list_of (JsonSupport.unwrap Phone_plan_dto.of_yojson) resp body

let test_phone_number_send_sms ~phone_number_id ~test_phone_number_options_t ?x_test_id () =
    let open Lwt in
    let uri = Request.build_uri "/phone/numbers/{phoneNumberId}/test" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let headers = Request.maybe_add_header headers "x-test-id" (fun x -> x) x_test_id in
    let uri = Request.replace_path_param uri "phoneNumberId"  phone_number_id in
    let body = Request.write_as_json_body Test_phone_number_options.to_yojson test_phone_number_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.handle_unit_response resp

