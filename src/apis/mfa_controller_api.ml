(*
 * This file has been generated by the OCamlClientCodegen generator for openapi-generator.
 *
 * Generated by: https://openapi-generator.tech
 *
 *)

let create_totp_device_for_custom ~create_totp_device_otp_auth_url_options_t =
    let open Lwt in
    let uri = Request.build_uri "/mfa/totp/device/custom" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_totp_device_otp_auth_url_options.to_yojson create_totp_device_otp_auth_url_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Totp_device_dto.of_yojson) resp body

let create_totp_device_for_otp_auth_url ~create_totp_device_otp_auth_url_options_t =
    let open Lwt in
    let uri = Request.build_uri "/mfa/totp/device/otpAuthUrl" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let body = Request.write_as_json_body Create_totp_device_otp_auth_url_options.to_yojson create_totp_device_otp_auth_url_options_t in
    Cohttp_lwt_unix.Client.call `POST uri ~headers ~body >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Totp_device_dto.of_yojson) resp body

let get_totp_device ~id =
    let open Lwt in
    let uri = Request.build_uri "/mfa/totp/device/{id}" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Totp_device_dto.of_yojson) resp body

let get_totp_device_by ?name ?issuer ?username () =
    let open Lwt in
    let uri = Request.build_uri "/mfa/totp/device/by" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.maybe_add_query_param uri "name" (fun x -> x) name in
    let uri = Request.maybe_add_query_param uri "issuer" (fun x -> x) issuer in
    let uri = Request.maybe_add_query_param uri "username" (fun x -> x) username in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Totp_device_optional_dto.of_yojson) resp body

let get_totp_device_code ~id ?at ?(min_seconds_until_expire = 5l) () =
    let open Lwt in
    let uri = Request.build_uri "/mfa/totp/device/{id}/code" in
    let headers = Request.default_headers in
    let headers = Cohttp.Header.add headers "x-api-key" Request.api_key in
    let uri = Request.replace_path_param uri "id"  id in
    let uri = Request.maybe_add_query_param uri "at" (fun x -> x) at in
    let uri = Request.add_query_param uri "minSecondsUntilExpire" Int32.to_string min_seconds_until_expire in
    Cohttp_lwt_unix.Client.call `GET uri ~headers >>= fun (resp, body) ->
    Request.read_json_body_as (JsonSupport.unwrap Totp_device_code_dto.of_yojson) resp body

